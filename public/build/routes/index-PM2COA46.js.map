{
  "version": 3,
  "sources": ["browser-route-module:/sandbox/app/routes/index.tsx?browser", "../../../app/routes/index.tsx"],
  "sourcesContent": ["export { default } from \"/sandbox/app/routes/index.tsx\";", "import { json, LoaderFunction } from '@remix-run/node'\nimport { useFetcher, useLoaderData } from '@remix-run/react'\nimport statesByCountry from '~/data.json'\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const url = new URL(request.url)\n  const country = url.searchParams.get('country') || 'United States'\n  const countries = Object.keys(statesByCountry)\n  const states = statesByCountry[country]\n\n  return json({ countries, country, states })\n}\n\nexport default function Index() {\n  const initialData = useLoaderData()\n  const fetcher = useFetcher()\n  const { countries, country, states } = fetcher.data ?? initialData\n\n  const handleChange = (e) => {\n    const params = new URLSearchParams()\n    params.set('country', e.target.value)\n    fetcher.load(`?index&${params.toString()}`)\n  }\n  return (\n    <div className=\"m-2\">\n      <h1 className=\"text-2xl font-bold\">Remix Dual Lists!</h1>\n      <div className=\"flex gap-4\">\n        <select\n          name=\"country\"\n          defaultValue={country}\n          onChange={handleChange}\n          size={10}\n        >\n          {countries.map((country) => (\n            <option>{country}</option>\n          ))}\n        </select>\n        <select name=\"state\" size={10}>\n          {states.map((state) => (\n            <option>{state}</option>\n          ))}\n        </select>\n      </div>\n    </div>\n  )\n}\n"],
  "mappings": ";;;;;;;;AAAA;;;ACAA;AAae,iBAAiB;AAbhC;AAcE,QAAM,cAAc;AACpB,QAAM,UAAU;AAChB,QAAM,EAAE,WAAW,SAAS,WAAW,cAAQ,SAAR,YAAgB;AAEvD,QAAM,eAAe,CAAC,MAAM;AAC1B,UAAM,SAAS,IAAI;AACnB,WAAO,IAAI,WAAW,EAAE,OAAO;AAC/B,YAAQ,KAAK,UAAU,OAAO;AAAA;AAEhC,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAAqB,sBACnC,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,UAAD;AAAA,IACE,MAAK;AAAA,IACL,cAAc;AAAA,IACd,UAAU;AAAA,IACV,MAAM;AAAA,KAEL,UAAU,IAAI,CAAC,aACd,oCAAC,UAAD,MAAS,aAGb,oCAAC,UAAD;AAAA,IAAQ,MAAK;AAAA,IAAQ,MAAM;AAAA,KACxB,OAAO,IAAI,CAAC,UACX,oCAAC,UAAD,MAAS;AAAA;",
  "names": []
}
